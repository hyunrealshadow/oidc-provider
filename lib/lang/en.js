import template from '../helpers/template.js';

export default {
  E10001: 'token not found',
  E10002: 'client mismatch',
  E10003: 'initial access token not found',
  E10004: 'invalid initial access token value',
  E10005: 'access token not found',
  E10006: 'failed x5t#S256 verification',
  E10007: 'DPoP proof JWT Replay detected',
  E10008: 'failed jkt verification',
  E10009: 'token audience prevents accessing the userinfo endpoint',
  E10010: 'associated client not found',
  E10011: 'associated account not found',
  E11001: 'could not determine a sector identifier',
  E11002: 'client JSON Web Key Set is invalid',
  E11003: 'could not load sector_identifier_uri response',
  E11004: (status, statusCode) => template`unexpected sector_identifier_uri response status code, expected 200 OK, got ${status} ${statusCode}`,
  E11005: 'sector_identifier_uri must return single JSON array',
  E11006: 'all registered redirect_uris must be included in the sector_identifier_uri response',
  E11007: "client's jwks_uri must be included in the sector_identifier_uri response",
  E11008: (status, statusCode) => template`unexpected jwks_uri response status code, expected 200 OK, got ${status} ${statusCode}`,
  E11009: 'client JSON Web Key Set failed to be refreshed',
  E11010: 'client_id is mandatory property for statically configured clients',
  E11011: 'client_id must be unique amongst statically configured clients',
  E11012: (alg) => template`no suitable encryption key found (${alg})`,
  E11101: (grant) => template`pairwise ${grant} clients must utilize private_key_jwt or self_signed_tls_client_auth token endpoint authentication methods`,
  E11102: (prop) => template`${prop} must be a non-negative integer`,
  E11103: 'response_types must contain members',
  E11104: 'redirect_uris must contain members',
  E11105: "grant_types must contain 'authorization_code' when 'code' is amongst response_types",
  E11106: "grant_types must contain 'implicit' when 'id_token' or 'token' are amongst response_types",
  E11107: 'only one proof of possession mechanism can be made required at a time',
  E11108: 'tls_client_auth requires one of the certificate subject value parameters',
  E11109: 'only one tls_client_auth certificate subject value must be provided',
  E11110: 'jwks and jwks_uri must not be used at the same time',
  E11111: (prop) => template`${prop} is mandatory property`,
  E11112: 'jwks or jwks_uri is mandatory for this client',
  E11113: (prop) => template`${prop} must only contain strings`,
  E11114: (prop) => template`${prop} must be a non-empty string if provided`,
  E11115: (prop, type) => template`${prop} must only contain ${type} uris`,
  E11116: (prop, type) => template`${prop} must be a ${type} uri`,
  E11117: (prop) => template`${prop} must be an array`,
  E11118: (prop) => template`${prop} must be a boolean`,
  E11119: (property, when) => template`${property} is mandatory property when ${when} is provided`,
  E11120: (prop, only) => template`${prop} can only contain ${[[...only], { type: 'disjunction' }]}`,
  E11121: (prop) => template`${prop} must be empty (no values are allowed)`,
  E11122: (prop, only) => template`${prop} must be ${[[...only], { type: 'disjunction' }]}`,
  E11123: (prop) => template`${prop} must not be provided (no values are allowed)`,
  E11124: 'web_message_uris must only contain valid uris',
  E11125: 'web_message_uris must only contain web uris',
  E11126: 'web_message_uris must only contain origins',
  E11127: (label) => template`${label} must only contain valid uris`,
  E11128: (label) => template`${label} must not contain fragments`,
  E11129: (label) => template`${label} must only contain web uris`,
  E11130: (label) => template`${label} for web clients using implicit flow MUST only register URLs using the https scheme`,
  E11131: (label) => template`${label} for web clients using implicit flow must not be using localhost`,
  E11132: (label) => template`${label} for native clients using http as a protocol can only use loopback addresses as hostnames`,
  E11133: (label, hostname) => template`${label} for native clients using claimed HTTPS URIs must not be using ${hostname} as hostname`,
  E11134: (label) => template`${label} for native clients using Custom URI scheme should use reverse domain name based scheme`,
  E11135: 'contacts can only contain email addresses',
  E11136: 'scope must only contain Authorization Server supported scope values',
  E11137: (prop) => template`invalid ${prop} value`,
  E12001: 'requested scope is not allowed',
  E12002: (missingLength) => template`refresh token missing requested ${[['scope', 'scopes', missingLength], { type: 'pluralize' }]}`,
  E13001: 'access token missing openid scope',
  E13002: 'access token missing requested scope',
  E14001: 'claims parameter should not be combined with response_type none',
  E14002: 'could not parse the claims parameter JSON',
  E14003: 'claims parameter should be a JSON object',
  E14004: 'claims parameter should have userinfo or id_token properties',
  E14005: 'claims.userinfo should be an object',
  E14006: 'claims.id_token should be an object',
  E14007: 'claims.userinfo should not be used since userinfo endpoint is not supported',
  E14008: 'claims.userinfo should not be used if access_token is not issued',
  E14009: 'DPoP proof JWT Replay detected',
  E14010: 'DPoP proof key thumbprint does not match dpop_jkt',
  E14011: 'could not validate id_token_hint',
  E14012: 'invalid max_age parameter value',
  E14013: 'openid scope must be requested for this response_type',
  E14014: (msg) => template`openid scope must be requested for clients with ${msg}`,
  E14015: (param) => template`openid scope must be requested when using the ${param} parameter`,
  E14016: 'openid scope must be requested for this request',
  E14017: 'plain code_challenge_method fallback disabled, code_challenge_method must be provided',
  E14018: 'not supported value of code_challenge_method',
  E14019: 'code_challenge must be provided with code_challenge_method',
  E14020: 'Authorization Server policy requires PKCE to be used for this request',
  E14021: 'unsupported prompt value requested',
  E14022: 'prompt none must only be used alone',
  E14023: 'invalid requested_expiry parameter value',
  E14024: 'response_mode not allowed for this response_type',
  E14025: 'response_mode not allowed for this response_type unless encrypted',
  E14026: (fapiProfile) => template`requested response_mode not allowed for the requested response_type in FAPI ${fapiProfile}`,
  E14027: 'missing one of required parameters login_hint_token, id_token_hint, or login_hint',
  E14028: 'only one of required parameters login_hint_token, id_token_hint, or login_hint must be provided',
  E14029: 'Pushed Authorization Request must be used',
  E14030: 'Request Object must be used by this client',
  E14031: 'Encrypted Request Objects are not supported by CIBA',
  E14032: 'request and request_uri parameters MUST NOT be used together',
  E14033: '`request_uri` parameter must not be used at the pushed_authorization_request_endpoint',
  E14034: 'could not find device form details',
  E14035: 'xsrf token invalid',
  E14036: 'could not decode id_token_hint',
  E14037: 'client_id does not match the provided id_token_hint',
  E14038: 'could not validate id_token_hint',
  E14039: 'post_logout_redirect_uri not registered',
  E14040: 'could not find logout details',
  E14042: (jwt) => template`introspection must be requested with Accept: ${jwt} for this client`,
  E14043: 'client does not have permission to read its record',
  E14044: (hit) => template`request MUST NOT include the ${hit} field`,
  E14045: "provided client_id does not match the authenticated client's one",
  E14046: "provided client_secret does not match the authenticated client's one",
  E14047: 'client does not have permission to update its record',
  E14048: 'client does not have permission to delete its record',
  E14049: 'this token does not belong to you',
  E14050: (method, path) => template`unrecognized route or not allowed method (${method} on ${path})`,
  E14051: 'no access token provided',
  E14052: 'access token must only be provided using one mechanism',
  E14053: 'access tokens must not be provided via query parameter',
  E14054: 'invalid authorization header value format',
  E14055: 'undefined|authorization header scheme must be `DPoP` when DPoP is used',
  E14056: '`DPoP` header not provided',
  E14057: 'authorization header scheme must be `Bearer`',
  E14058: '`DPoP` tokens must be provided via an authorization header',
  E14059: (param) => template`${param} must be a string with a minimum length of 43 characters`,
  E14060: (param) => template`${param} must be a string with a maximum length of 128 characters`,
  E14061: (param) => template`${param} contains invalid characters`,
  E14062: (missing) => template`missing required ${[['parameter', 'parameters', missing.length], { type: 'pluralize' }]} ${[missing, { type: 'conjunction' }]}`,
  E14063: 'invalid claims.id_token.acr.values type',
  E14064: 'multiple proof-of-posession mechanisms are not allowed',
  E14065: (origin, clientId) => template`origin ${origin} not allowed for client: ${clientId}`,
  E14066: (params) => template`${[params, { type: 'conjunction' }]} ${[['parameter', 'parameters', params.length], { type: 'pluralize' }]} must not be provided twice`,
  E14067: 'failed to parse the request body',
  E14068: (cty, method, path) => template`only ${cty} content-type bodies are supported on ${method} ${path}`,
  E14072: 'client_id and client_secret in the authorization header are not properly encoded',
  E14073: 'mismatch in body and authorization client ids',
  E14074: 'client_secret must be provided in the Authorization header',
  E14075: 'client authentication must only be provided using one mechanism',
  E14077: 'invalid client_assertion format',
  E14078: 'subject of client_assertion must be the same as client_id provided in the body',
  E14079: 'client_assertion_type must be provided',
  E14080: (assertionType) => template`client_assertion_type must have value ${assertionType}`,
  E14081: 'no client authentication mechanism provided',
  E15001: 'authorization request has expired',
  E15002: 'interaction session not found',
  E15003: 'authorization session and cookie identifier mismatch',
  E15004: 'interaction session and authentication session mismatch',
  E15005: 'interaction session id cookie not found',
  E15006: 'interaction session not found',
  E15007: 'session not found',
  E15008: 'session principal changed',
  E16001: 'sub (JWT subject) must be provided in the client_assertion JWT',
  E16002: 'client not found',
  E16003: 'the provided authentication mechanism does not match the registered client authentication method',
  E16004: 'invalid secret provided',
  E16005: 'client certificate was not provided',
  E16006: 'client certificate was not verified',
  E16007: 'certificate subject value does not match the registered one',
  E16008: 'client certificate was not provided',
  E16009: 'unregistered client certificate provided',
  E16010: 'alg mismatch',
  E16011: 'expiration must be specified in the client_assertion JWT',
  E16012: 'unique jti (JWT ID) must be provided in the client_assertion JWT',
  E16013: 'iss (JWT issuer) must be provided in the client_assertion JWT',
  E16014: 'iss (JWT issuer) must be the client_id',
  E16015: 'aud (JWT audience) must be provided in the client_assertion JWT',
  E16016: 'list of audience (aud) must include the endpoint url, issuer identifier or token endpoint url',
  E16017: 'audience (aud) must equal the endpoint url, issuer identifier or token endpoint url',
  E16018: 'client assertion tokens must only be used once',
  E17001: 'authorization code not found',
  E17002: 'client mismatch',
  E17003: 'authorization code is expired',
  E17004: 'grant not found',
  E17005: 'grant is expired',
  E17006: 'mutual TLS client certificate not provided',
  E17007: 'DPoP proof JWT Replay detected',
  E17009: 'authorization code redirect_uri mismatch',
  E17010: 'authorization code already consumed',
  E17011: 'authorization code invalid (referenced account not found)',
  E17013: 'missing DPoP proof JWT',
  E17015: 'DPoP proof key thumbprint does not match dpop_jkt',
  E17016: 'backchannel authentication request not found',
  E17017: 'backchannel authentication request already consumed',
  E17018: 'backchannel authentication request invalid (referenced account not found)',
  E17019: 'device code not found',
  E17020: 'device code already consumed',
  E17021: 'device code invalid (referenced account not found)',
  E17022: 'refresh token not found',
  E17023: 'refresh token is expired',
  E17024: 'failed x5t#S256 verification',
  E17027: 'failed jkt verification',
  E17028: 'refresh token invalid (referenced account not found)',
  E17029: 'refresh token already used',
  E17030: 'PKCE verification failed',
  E18001: "redirect_uri did not match any of the client's registered redirect_uris",
  E19001: "web_message_uri did not match any client's registered web_message_uris",
  E21001: 'authorization request resolved without requesting interactions but no account id was resolved',
  E21002: 'authorization request resolved without requesting interactions but no scope was granted',
  E22001: "authorization request is still pending as the end-user hasn't yet completed the user interaction steps",
  E23001: 'native clients require End-User interaction',
  E23002: 'requested scopes not granted',
  E23003: 'requested claims not granted',
  E25001: 'backchannel authentication request is expired',
  E25002: 'device code is expired',
  E28001: 'client is invalid',
  E28002: 'unrecognized id_token_hint audience',
  E29001: 'DPoP proof must have a iat number property',
  E29002: 'DPoP proof must have a jti string property',
  E29003: 'DPoP proof nonce must be a string',
  E29004: 'DPoP proof iat is not recent enough',
  E29005: 'DPoP proof htm mismatch',
  E29006: 'DPoP proof htu mismatch',
  E29007: 'DPoP proof ath mismatch',
  E29008: 'invalid DPoP key binding',
  E30001: (param) => template`Request Object is not a valid ${param}`,
  E30002: 'could not decrypt request object',
  E30003: 'could not parse Request Object',
  E30004: 'Request Object must not contain request or request_uri properties',
  E30005: 'request response_type must equal the one in request parameters',
  E30006: 'request client_id must equal the one in request parameters',
  E30007: "request client_id must equal the authenticated client's client_id",
  E30008: 'request client_id mismatch',
  E30009: 'unsupported signed request alg',
  E30010: 'the preregistered alg must be used in request or request_uri',
  E30011: "Request Object is missing the 'exp' claim",
  E30012: "Request Object is missing the 'aud' claim",
  E30013: "Request Object is missing the 'nbf' claim",
  E30014: "Request Object 'exp' claim too far from 'nbf' claim",
  E30015: (claim) => template`Request Object is missing the '${claim}' claim`,
  E30017: 'Request Object claims are invalid',
  E30018: 'could not validate Request Object',
  E30019: 'request object replay detected',
  E30020: 'Request Object from insecure request_uri must be signed and/or symmetrically encrypted',
  E31001: 'invalid request_uri scheme',
  E31002: 'provided request_uri is not allowed',
  E31003: 'could not load or parse request_uri',
  E31004: 'request_uri is invalid or expired',
  E33001: 'only a single resource indicator value must be requested/resolved during Access Token Request',
  E33002: 'resource indicator is missing, or unknown',
  E33003: 'only a single resource indicator value is supported for this grant type',
  E33005: 'only a single audience value is supported',
  E33006: 'resource indicator must be an absolute URI',
  E33007: 'resource indicator must not contain a fragment component',
  E35001: 'End-User authentication is required',
  E35002: 'End-User authentication could not be obtained',
  E35003: 'id_token_hint and authenticated subject do not match',
  E35004: 'requested subject could not be obtained',
  E35005: 'none of the requested ACRs could not be obtained',
  E35006: 'requested ACR could not be obtained',
  E37001: 'registration parameter provided but not supported',
  E38001: 'request parameter provided but not supported',
  E39001: 'request_uri parameter provided but not supported',
  E44001: 'requested grant type is not allowed for this client',
  E44002: (grantType) => template`${grantType} is not allowed for this client`,
  E44003: 'requested response_type is not allowed for this client',
  E45001: 'could not identify end-user',
  E47001: 'unsupported grant_type requested',
  E48001: 'unsupported response_mode requested',
  E49001: 'unsupported response_type requested',
  E50001: 'nonce is required in the DPoP proof',
  E50002: 'invalid nonce in DPoP proof',
};
